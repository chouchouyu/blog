(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{391:function(t,s,a){"use strict";a.r(s);var n=a(44),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"基本标签"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本标签"}},[t._v("#")]),t._v(" 基本标签")]),t._v(" "),a("h2",{attrs:{id:"创建第一个网页"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建第一个网页"}},[t._v("#")]),t._v(" 创建第一个网页")]),t._v(" "),a("p",[a("strong",[t._v("方法一")])]),t._v(" "),a("ol",[a("li",[t._v("创建一个空文件夹,在VScode编辑器中打开这个文件夹")]),t._v(" "),a("li",[t._v("按ctrl + N快捷键新建文件，"),a("strong",[t._v('保存格式必须要手动填写html"后缀')])])]),t._v(" "),a("p",[a("strong",[t._v("方法二")])]),t._v(" "),a("ol",[a("li",[t._v('在文件夹中直接点击鼠标右键"新建文本文件"')]),t._v(" "),a("li",[t._v("将. txt格式文件改为. html文件")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("网页虽然是花花绿绿的，但是html文件本身是纯文本的")])]),t._v(" "),a("h2",{attrs:{id:"html-骨架的生成"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#html-骨架的生成"}},[t._v("#")]),t._v(" HTML 骨架的生成")]),t._v(" "),a("p",[a("strong",[t._v("输入! (英文模式下输入的感叹号) ,按tab键")]),t._v("，即可自动生成HTML5的骨架")]),t._v(" "),a("p",[t._v("如果骨架没有生成，就说明你没有将网页保存，或者网页保存格式不是. htm1后缀")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("可以将输入法属性设置里调整为中文时使用英文标点")]),t._v(" "),a("p",[t._v("注意要打开电脑的显示文件拓展名")])]),t._v(" "),a("h2",{attrs:{id:"网页的浏览方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#网页的浏览方法"}},[t._v("#")]),t._v(" 网页的浏览方法")]),t._v(" "),a("p",[a("strong",[t._v("方法一")])]),t._v(" "),a("ul",[a("li",[t._v("直接在文件夹中双击网页图标，即可查看网页")])]),t._v(" "),a("p",[a("strong",[t._v("方法二")])]),t._v(" "),a("ul",[a("li",[t._v("下载open in brower插件可以打开网页")]),t._v(" "),a("li",[t._v("给VSCode安装Live Server插件,故名思议,这个插件可以让“实时热更新”网页， 自动刷新网页")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.loli.net/2020/12/30/dbxSrRatAf3QOK8.png",alt:"image-20201230154739874"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.loli.net/2020/12/30/2TG9vpl61ONjiuW.png",alt:"image-20201230155115743"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.loli.net/2020/12/30/cqlTVROaYF9XJLK.png",alt:"image-20201230155026813"}})]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("使用with live server这种方法必须注意:网页必须存放在文件夹中，且VSCode已经打开这个文件夹")]),t._v(" "),a("p",[t._v("Chrome浏览器非常适合开发，"),a("strong",[t._v("所以要将Chrome浏览器设置为默认的浏览器哦")])]),t._v(" "),a("p",[t._v("杀毒软件、管家通常会阻止这个操作")]),t._v(" "),a("p",[t._v("请妥善设置杀毒软件相关设置")])]),t._v(" "),a("h2",{attrs:{id:"认识html骨架"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#认识html骨架"}},[t._v("#")]),t._v(" 认识HTML骨架")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.loli.net/2020/12/30/GMxRjmZtYJnouyX.png",alt:"image-20201230155526443"}})]),t._v(" "),a("p",[a("strong",[t._v("标签是由：小于号+中间字符+大于号组成的代码(注意:代码里所有字符都由英文字符组成)")])]),t._v(" "),a("p",[a("strong",[t._v("标签的形式")])]),t._v(" "),a("ul",[a("li",[t._v("单标签(形单影只)   比如meta标签")]),t._v(" "),a("li",[t._v("双标签(成双成对)   比如html标签")])]),t._v(" "),a("p",[t._v("HTML叫做“超文本标记语言”，超文本标记就是标签,"),a("strong",[t._v("这些标签都有不同的功能.")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("如果有/(斜杠)的为该标签的结束标签,没有的就为开始标签.")]),t._v(" "),a("p",[t._v('在HTML4时代，单标签必须写一个结尾的反斜杠，例如<meta charset="UTF-8"/> HTML5不用写.')]),t._v(" "),a("p",[a("strong",[t._v("标签即元素,元素即标签.")])])]),t._v(" "),a("h3",{attrs:{id:"文档类型声明dtd"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文档类型声明dtd"}},[t._v("#")]),t._v(" 文档类型声明DTD")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("HTML文件第一行必须是DTD (Document Type Definition文档类型声明)")])]),t._v(" "),a("li",[t._v("不写DTD会引发浏览器的一些兼容问题")]),t._v(" "),a("li",[t._v("不同版本的HTML有不同的DTD写法")])]),t._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("DETAILS")]),t._v(" "),a("p",[t._v("HTML5:< !DOCTYPE html>")]),t._v(" "),a("p",[t._v('HTML4.01严格版:< !DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01/ /EN" "http://www.w3.org/TR/html4/strict.dtd">')]),t._v(" "),a("p",[t._v('HTML4.01过渡版:< !DOCTYPE HTML PUBLIC\'//W3C//DTD HTML 4.01 Transitional/ /EN" "http://www.w3. org/TR/html4/lose. dtd">')]),t._v(" "),a("p",[t._v('HTML4.01框架版:< !DOCTYPE HTML PUBLIC "_//W3C//DTD HTML 4.01 Frameset//EN" "http://www.w3. org/TR/htm14/frameset.dtd">')])]),t._v(" "),a("p",[a("strong",[t._v("W3C组织")])]),t._v(" "),a("p",[t._v("W3C (The World Wide Web Consortium, 万维网联合会)是万维网的主要国际标准组织。该联盟成立于1994年，负责制定Web标准，主要是HTML和CSS。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.loli.net/2020/12/30/JRkfVQl9hrLHdKy.png",alt:"image-20201230160701169"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.loli.net/2020/12/30/DQOLksgnKTvexAq.png",alt:"image-20201230161040017"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.loli.net/2020/12/30/5U8Hqin9FwS2heX.png",alt:"image-20201230161158180"}})]),t._v(" "),a("h3",{attrs:{id:"网页的字符集"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#网页的字符集"}},[t._v("#")]),t._v(" 网页的字符集")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.loli.net/2020/12/30/xRZwps2nyzg7tJC.png",alt:"image-20201230161520255"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.loli.net/2020/12/30/PGbRargM9WzEqUX.png",alt:"image-20201230161416640"}})]),t._v(" "),a("p",[a("strong",[t._v("UTF-8和gb2312")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.loli.net/2020/12/30/3regfmOv1aTXpPj.png",alt:"image-20201230161704191"}})]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("无论使用哪种字符集，一定要在VScode编辑器中将文件也设置为相同字符集，否则会出现乱码，然后更改meta标签:")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.loli.net/2020/12/30/7ypZjeLONH2hiV3.png",alt:"image-20201230162507312"}})]),t._v(" "),a("p",[t._v("Live Server插件不支持gb2312 (gbk) 字符集，只支持UTF-8字符集")]),t._v(" "),a("h3",{attrs:{id:"网页的title"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#网页的title"}},[t._v("#")]),t._v(" 网页的title")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.loli.net/2020/12/30/hw5fjTu34MYpb1C.png",alt:"image-20201230162949455"}})]),t._v(" "),a("p",[a("strong",[t._v("title的用途")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.loli.net/2020/12/30/vgYM6s2xPpNIBXU.png",alt:"image-20201230163634963"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.loli.net/2020/12/30/JbtXlOYjDfwvNVS.png",alt:"image-20201230163412697"}})]),t._v(" "),a("p",[t._v("title标签用来设置网页的标题，文字会显示在浏览器的标签栏上")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("title也是搜索引擎收录网站时显示的标题,为了吸引用户点击,合理设置title是必要的.")]),t._v(" "),a("p",[t._v("SEO (Search Engine Optimization, 搜索引擎优化)利用搜索引擎的规则提高网站在有关搜索引擎内的自然排名,让网站在搜索引擎的结果中内占据领先地位，获得品牌收益")])]),t._v(" "),a("p",[a("strong",[t._v("网页关键词和页面描述")])]),t._v(" "),a("p",[t._v("使用meta标签设置网页关键词和描述，name属性非常关键,用来设置meta的具体功能")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.loli.net/2020/12/30/kvP9MInbzhjUO3E.png",alt:"image-20201230165308708"}})]),t._v(" "),a("h3",{attrs:{id:"注释标签"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注释标签"}},[t._v("#")]),t._v(" 注释标签")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("用法:代码的作用，含义，意图写在四个减号中间,内容不会被浏览器解析;")])]),t._v(" "),a("li",[a("p",[t._v("让别人更能明白这段代码你写的是什么内容,有什么作用")])])]),t._v(" "),a("h1",{attrs:{id:"html-根标签"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#html-根标签"}},[t._v("#")]),t._v(" html  根标签")]),t._v(" "),a("blockquote",[a("p",[t._v("网页中的所有内容全部放在html标签内部;")]),t._v(" "),a("p",[t._v("网页根标签 lang是language的缩写，代表是该网页属于哪一个国家或是地区的网页;不能写多个.")]),t._v(" "),a("p",[t._v("如果是中文网站写中文,如果写英文,因为一些插件,会识别你这为英文网站并且提示你是否要翻译")])]),t._v(" "),a("h2",{attrs:{id:"head-头部标签"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#head-头部标签"}},[t._v("#")]),t._v(" head 头部标签")]),t._v(" "),a("blockquote",[a("p",[t._v("header是网页的头部标签,head里面的内容不会直接出现在网页中,")]),t._v(" "),a("p",[t._v("作用:")]),t._v(" "),a("p",[t._v("主要是帮助游览器和搜索引擎去解析网页.")])]),t._v(" "),a("h3",{attrs:{id:"title-标题标签"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#title-标题标签"}},[t._v("#")]),t._v(" title  标题标签")]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("title"),a("code",[t._v("中的内容会显示在游览器的标题栏")]),t._v(",游览器会根据title判断网页的主要内容")])]),t._v(" "),a("p",[t._v("方便用户通过搜索网页的名字找到相应的网站.")]),t._v(" "),a("p",[t._v("title标签的内容会作为搜索结果的超链接上的文字显示")]),t._v(" "),a("p",[t._v("网页的名字,当把文档加入用户的收藏夹或书签列表时，标题标签的内容将成为该文档链接的默认名称")]),t._v(" "),a("p",[t._v("**注意:**尽量把重要的关键词放在前面,关键词不要重复出现,尽量做到每个页面的title标题中不要设置相同的内容。")])]),t._v(" "),a("h3",{attrs:{id:"meta标签-单标签"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#meta标签-单标签"}},[t._v("#")]),t._v(" meta标签  单标签")]),t._v(" "),a("p",[a("strong",[t._v("meta标签被称为网页的元数据")])]),t._v(" "),a("p",[t._v("::: danger"),a("code",[t._v("元数据就是一些与")]),t._v("生俱来的底层数据,类比于相当于人的DNA. :::")]),t._v(" "),a("p",[a("code",[t._v("元数据就是一些与")]),t._v("生俱来的底层数据,类比于相当于人的DNA.")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("我是谁我在那")])]),t._v(" "),a("p",[a("code",[t._v("元数据就是一些与")]),t._v("生俱来的底层数据,类比于相当于人的DNA.")]),t._v(" "),a("p",[t._v("作用告诉游览器和搜索引擎基本数据`")]),t._v(" "),a("h4",{attrs:{id:"meta-charset-utf-8"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#meta-charset-utf-8"}},[t._v("#")]),t._v(' meta charset="utf-8"')]),t._v(" "),a("blockquote",[a("p",[t._v("作用:网页文字的编码格式,避免乱码问题.")]),t._v(" "),a("p",[t._v("游览器不知道网页文件的编码集的话就会导致乱码")]),t._v(" "),a("p",[t._v("(计算机不认识中文,我们也可能不认识法语),写上utf-8就是支持中文的万国码.")]),t._v(" "),a("p",[t._v("通过声明一个明确的字符编码，让浏览器轻松、快速的确定适合网页内容的渲染方式，通常指定为'UTF-8'。")]),t._v(" "),a("p",[t._v("如果一个网页要显示很多国家的语言就开发出了utf-8,在开发中我们使用的字符集都是utf-8.")])]),t._v(" "),a("h4",{attrs:{id:"meta-name-keywords-content-关键字信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#meta-name-keywords-content-关键字信息"}},[t._v("#")]),t._v(' meta name="keywords" content="关键字信息"')]),t._v(" "),a("blockquote",[a("p",[t._v("name属性指定网页的数据名称")]),t._v(" "),a("p",[t._v("content属性指定数据的内容")])]),t._v(" "),a("blockquote",[a("p",[t._v("表示网页的关键字信息")]),t._v(" "),a("p",[t._v("可以同时指定多个关键字没有限制,关键字之间用,隔开")]),t._v(" "),a("p",[t._v("例如: 京东网站 content写网上购物,网上商城,家电,家居,母婴,图书,可以根据这些关键字找到网站")])]),t._v(" "),a("h4",{attrs:{id:"meta-name-description-content-网页的描述信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#meta-name-description-content-网页的描述信息"}},[t._v("#")]),t._v(' meta name="description" content="网页的描述信息"')]),t._v(" "),a("blockquote",[a("p",[t._v("描述信息被搜索引擎采用后,作为页面的摘要去显示")]),t._v(" "),a("p",[t._v("网站的描述会显示在搜索引擎的搜索结果中")])]),t._v(" "),a("h2",{attrs:{id:"body存放用户看到的所有内容"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#body存放用户看到的所有内容"}},[t._v("#")]),t._v(" body存放用户看到的所有内容")]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("body是html的子元素,表现网页的主题部分.所有可见部分都应该放在body里面")])]),t._v(" "),a("p",[t._v("可以存放包含文字,图片,视频,音频.整个网页就这四类资源")])]),t._v(" "),a("h3",{attrs:{id:"div-division-划分区域标签"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#div-division-划分区域标签"}},[t._v("#")]),t._v(" div(DIVision)  划分区域标签")]),t._v(" "),a("blockquote",[a("p",[t._v("Div标签本身没有什么特别之处,没有语义，没有权重,")]),t._v(" "),a("p",[t._v("div标签最大功劳的是替代了以前table标签布局,")]),t._v(" "),a("p",[t._v("正因为没有语义我们可以利用idv在网页内容中划分出多个矩形区域,存放不一样的内容.")]),t._v(" "),a("p",[t._v("一个个div就像一个个集装箱,我们去用这些集装箱去各式各样的物品,也就是我们去装我们的标签,来达到页面的位置布局.")]),t._v(" "),a("p",[t._v("目前来说div还是我们主要的布局元素")])]),t._v(" "),a("h3",{attrs:{id:"h标签正文中的标题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#h标签正文中的标题"}},[t._v("#")]),t._v(" h标签正文中的标题")]),t._v(" "),a("blockquote",[a("p",[t._v("H标签的重要性仅次于页面Title,文章会有标题,如首页的logo上可以加H1标签,包含最重要的关键词.")]),t._v(" "),a("p",[t._v("h1标签自带的权重使得网页的蜘蛛爬虫认为它最重要.")]),t._v(" "),a("p",[t._v("一个页面最多一个h1标签,就像你生命中最重要的女人一个.")]),t._v(" "),a("p",[t._v("更小的标题可以使用h3标签,没有明确的个数限制,但是要和h2有一定的比例关系,一个h2对应三个h3.就像一个公司最上面一个总裁,两三个副总裁,后面还有各个部门和职员一样.")]),t._v(" "),a("p",[t._v("h分出的区域和div分出的区域用户看起来没有任何区别,")]),t._v(" "),a("p",[t._v("标签写的更加符合规范时是给搜索引擎看的,搜索引擎只会收录一些比较重要的标签")]),t._v(" "),a("p",[t._v("div京东和h1京东,h1写的京东肯定会被收录")]),t._v(" "),a("p",[t._v("大量使用H标签反而会适得其反,使得主题不能突出,搜索引擎爬虫就不能正确的爬出你想要它爬出的内容.最终网站排名反而不好.")])]),t._v(" "),a("h3",{attrs:{id:"ul-unordered-list-li-list-item-无序列表标签"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ul-unordered-list-li-list-item-无序列表标签"}},[t._v("#")]),t._v(" ul（ Unordered List) li  (list-item) 无序列表标签")]),t._v(" "),a("blockquote",[a("p",[t._v("内容相似、结构相仿、布局接近使用无序列表.")]),t._v(" "),a("p",[a("strong",[t._v("使用li表示列表项")])]),t._v(" "),a("p",[t._v("ul 标签子层级里只能写li标签.")]),t._v(" "),a("p",[t._v("如果你想添加p,div等标签,你在li里面添加一万个都没关系.")]),t._v(" "),a("p",[t._v("用ul标签划分出很多相同大区域,li划分大区域里面单个相似的区域.")]),t._v(" "),a("p",[t._v("布局之前先做结构也是去用好标签,标签使用正确网络布局才可能正确.")])]),t._v(" "),a("p",[t._v("属性:type")]),t._v(" "),a("ol",[a("li",[t._v("无序列表的符号,不建议去使用,但凡是样式的表现效果请使用css去实现.")]),t._v(" "),a("li",[t._v("值:默认disc：实体圆、circle：空心圆、square：实体方块")]),t._v(" "),a("li",[t._v("仅做了解")])]),t._v(" "),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 无序列表默认属性type的值是disc，disc定义一个实体圆，所以disc不用刻意去设置 --\x3e")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("ul")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("我是第一个"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("我是第二个"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("我是第三个"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("ul")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 这些都是通过type来定义的，circle是定义一个空心圆 --\x3e")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("ul")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("circle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("我是第一个"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("我是第二个"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("我是第三个"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("ul")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- square定义实体方块 --\x3e")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("ul")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("square"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("我是第一个"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("我是第二个"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("我是第三个"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("ul")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br")])]),a("h3",{attrs:{id:"ol-ordered-lists-li-list-item-有序列表标签"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ol-ordered-lists-li-list-item-有序列表标签"}},[t._v("#")]),t._v(" ol（ ordered lists ）li  (list-item)  有序列表标签")]),t._v(" "),a("blockquote",[a("p",[t._v("也是划分内容相似、结构相仿、布局接近的区域")]),t._v(" "),a("p",[t._v("但是每个区域的内容是有先后关系的")])]),t._v(" "),a("p",[t._v("属性:type")]),t._v(" "),a("ol",[a("li",[t._v("无序列表的符号,不建议去使用,但凡是样式的表现效果请使用css去实现.")]),t._v(" "),a("li",[t._v("值:1、A、a、l、i、start.")]),t._v(" "),a("li",[t._v("仅做了解")])]),t._v(" "),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 有序列表默认是数字往下计数的 --\x3e")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("ol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("我是第一个"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("我是第二个"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("我是第三个"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("ol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  \n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 定义A，就是按照大写字母来计数的，当然了，不能直接定义B，它不是不会从B开始数的 --\x3e")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("ol")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("A"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("我是第一个"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("我是第二个"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("我是第三个"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("ol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    \n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 定义a，就是安装小写字母开始计数的 --\x3e")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("ol")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("我是第一个"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("我是第二个"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("我是第三个"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("ol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    \n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 定义I，就是按照大写罗马数字计数的 --\x3e")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("ol")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("I"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("我是第一个"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("我是第二个"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("我是第三个"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("ol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    \n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 定义i，就是按照大写罗马数字计数的 --\x3e")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("ol")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("我是第一个"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("我是第二个"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("我是第三个"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("ol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    \n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- start属性，就是按照从多少数来计数，比如我想从3开始计数。start属性只能定义数字，不支持英文字母哦。--\x3e")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("ol")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("start")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("我是第一个"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("我是第二个"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("我是第三个"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("ol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br"),a("span",{staticClass:"line-number"},[t._v("34")]),a("br"),a("span",{staticClass:"line-number"},[t._v("35")]),a("br"),a("span",{staticClass:"line-number"},[t._v("36")]),a("br"),a("span",{staticClass:"line-number"},[t._v("37")]),a("br"),a("span",{staticClass:"line-number"},[t._v("38")]),a("br"),a("span",{staticClass:"line-number"},[t._v("39")]),a("br"),a("span",{staticClass:"line-number"},[t._v("40")]),a("br"),a("span",{staticClass:"line-number"},[t._v("41")]),a("br"),a("span",{staticClass:"line-number"},[t._v("42")]),a("br"),a("span",{staticClass:"line-number"},[t._v("43")]),a("br"),a("span",{staticClass:"line-number"},[t._v("44")]),a("br"),a("span",{staticClass:"line-number"},[t._v("45")]),a("br"),a("span",{staticClass:"line-number"},[t._v("46")]),a("br")])]),a("h3",{attrs:{id:"dl-definition-list-dt-dd自定义列表标签"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dl-definition-list-dt-dd自定义列表标签"}},[t._v("#")]),t._v(" dl （ definition list) > dt + dd自定义列表标签")]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[t._v("<dl>"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*Definition List 定义列表*/")]),t._v("\n\t<dt>我是标题</dt>"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*Definition Term 定义项*/")]),t._v("\n     <dd>我是正文，我必须长长长长长长长长长</dd>"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*Definition Description 定义描述*/")]),t._v("\n</dl>\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("blockquote",[a("p",[t._v("内容不完全一样、结构相仿、布局接近、每个区域的内容没有先后关系的的区域")]),t._v(" "),a("p",[t._v("从语义上来讲DT是名称,是标题,DD是解释,是内容.")]),t._v(" "),a("p",[t._v("dt和dd标签是同级的,都放于dl标签之内,dt和dd不能相互嵌套.")]),t._v(" "),a("p",[t._v("必须结合dl标签去使用dd,dt标签,不能单独使用dt,dd标签.")])]),t._v(" "),a("p",[a("strong",[t._v("ps:列表之间可以相互嵌套")])]),t._v(" "),a("h3",{attrs:{id:"p-paragraph-标签-段落标签"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#p-paragraph-标签-段落标签"}},[t._v("#")]),t._v(" p(paragraph)标签  段落标签")]),t._v(" "),a("blockquote",[a("p",[t._v("作用:在网页上划分出一个专门存放大段文字的区域.")])]),t._v(" "),a("h3",{attrs:{id:"span标签-划分文字区域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#span标签-划分文字区域"}},[t._v("#")]),t._v(" span标签 划分文字区域")]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("作用:")])]),t._v(" "),a("p",[t._v("​\t\t\t在网页圈出内容进行单独处理")]),t._v(" "),a("p",[t._v("如果一段文字某几个文字变需要变色和加背景颜色,那这些特殊的文字就用span去包裹.")])]),t._v(" "),a("h3",{attrs:{id:"strong-b标签-重要文字标注"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#strong-b标签-重要文字标注"}},[t._v("#")]),t._v(" strong b标签 重要文字标注")]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("作用:")])]),t._v(" "),a("p",[t._v("​\t\t\t网页内容中的某段文字中间标注出特别重要的文字,会对相应的文字进行加粗处理.")]),t._v(" "),a("p",[t._v("b标签只是规定文本加粗,是一个表现效果的标签")]),t._v(" "),a("p",[t._v("strong还有除了文本加粗强调文字的作用.能让搜索引擎觉得里面的字很重要.")])]),t._v(" "),a("h3",{attrs:{id:"em-i都为斜体标签"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#em-i都为斜体标签"}},[t._v("#")]),t._v(" em i都为斜体标签")]),t._v(" "),a("blockquote",[a("p",[t._v("em不仅能使文本变成斜体,而且还能够强调")]),t._v(" "),a("p",[t._v("b标签只是规定文本变斜,是一个表现效果的标签")]),t._v(" "),a("p",[t._v("但是i标签现在没有被淘汰,广泛应用于小图标上.(iconfont)")])]),t._v(" "),a("h3",{attrs:{id:"blockquote-标签-用于大段引用文字展示"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#blockquote-标签-用于大段引用文字展示"}},[t._v("#")]),t._v(" blockquote 标签   用于大段引用文字展示")]),t._v(" "),a("blockquote",[a("p",[t._v("主要去划分区域展示引用的古典,名人名言.")])]),t._v(" "),a("h3",{attrs:{id:"a标签"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#a标签"}},[t._v("#")]),t._v(" a标签")]),t._v(" "),a("blockquote",[a("p",[t._v("**a标签定义超链接，**用于从一张页面链接到另一张页面。")]),t._v(" "),a("p",[t._v("链接:a 标签最重要的属性是 href 属性，它指示链接的目标。")]),t._v(" "),a("p",[t._v("​\t"),a("strong",[t._v("属性:")])]),t._v(" "),a("p",[t._v("​\t\t\t\t"),a("strong",[t._v("href 指定跳转的目标路径")])]),t._v(" "),a("p",[t._v("​\t\t\t\t\t\t"),a("strong",[t._v("1.值可以是一个外部网站的地址")])]),t._v(" "),a("p",[t._v("​\t\t\t\t\t\t"),a("strong",[t._v("2.值也可以写一个内部的地址")])]),t._v(" "),a("p",[t._v('**锚点:**href="#ID名" 跳转到页面的指定位置,   只需讲 href属性设置为  #目标元素id的属性值')]),t._v(" "),a("p",[t._v("在开发中可以将#作为超链接的路径的占位符使用,会跳转页面的顶部")]),t._v(" "),a("p",[t._v("可以使用javascript:;来作为href的属性,此时点击这个超链接什么也不会发生.")])]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("target属性")]),t._v("   用来指定超链接的打开方式")]),t._v(" "),a("blockquote",[a("p",[t._v('target="_self" 默认值 在当前窗口打开。')]),t._v(" "),a("p",[t._v('target="__blank" 在新窗口打开；')])])]),t._v(" "),a("h3",{attrs:{id:"img标签"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#img标签"}},[t._v("#")]),t._v(" img标签")]),t._v(" "),a("blockquote",[a("p",[t._v("用于向当前页面引入一个外部图片")])]),t._v(" "),a("p",[a("strong",[t._v("属性")])]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v('src="图片地址"')]),t._v("   src是sourse的缩写，表示我们需要显示的图片文件所在的位置")]),t._v(" "),a("p",[a("strong",[t._v("width/height")]),t._v("     图片的宽高, (单位是像素)  最好写图片原始尺寸.")]),t._v(" "),a("p",[t._v("​\t\t\t\t\t  -宽度和高度如果只修改一个,另一个会等比例缩放")]),t._v(" "),a("p",[t._v("​\t\t\t\t\t**注意:**一般情况在pc端,不建议修改图片的大小,需要多大的图片就裁多大")]),t._v(" "),a("p",[t._v("​\t\t\t\t\t\t\t\t但是在移动端,经常需要对图片的缩放(一般是大图缩小)")]),t._v(" "),a("p",[a("strong",[t._v("alt")]),t._v("图片描述  图片无法加载出来显示  搜索引擎会根据alt内容来识别图片,如果不写不会被搜索引擎收录")]),t._v(" "),a("p",[a("strong",[t._v("title")]),t._v("鼠标悬停会出现文字提示")])]),t._v(" "),a("p",[a("strong",[t._v("常见的图片格式")])]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("jpeg(jpg)")])]),t._v(" "),a("p",[t._v("​\t\t    ---支持的颜色丰富,不支持透明效果,不支持动图")]),t._v(" "),a("p",[t._v("​\t\t\t---一般用来显示照片")]),t._v(" "),a("p",[a("strong",[t._v("gif")])]),t._v(" "),a("p",[t._v("​\t\t\t----支持的颜色比较少,支持简单透明,支持动图")]),t._v(" "),a("p",[t._v("​\t\t\t---颜色单一的图片,动图")]),t._v(" "),a("p",[a("strong",[t._v("png")])]),t._v(" "),a("p",[t._v("​\t\t\t---支持的颜色丰富")]),t._v(" "),a("p",[t._v("​\t\t\t---复杂透明的图片(专为网页而生的)")]),t._v(" "),a("p",[a("strong",[t._v("webp")])]),t._v(" "),a("p",[t._v("​\t\t\t---这是谷歌专门推出来表现网页中的图片的一种格式")]),t._v(" "),a("p",[t._v("​\t\t\t---它具备所有图片的优点,而且文件还特别小")]),t._v(" "),a("p",[t._v("​\t\t\t---缺点:兼容性不好")]),t._v(" "),a("p",[a("strong",[t._v("base64")])]),t._v(" "),a("p",[t._v("​\t\t\t---将图片使用base64进行编码,这样可以直接将图片直接转换为字符.通过字符的形\t\t\t\t式引入图片")]),t._v(" "),a("p",[t._v("​\t\t\t---一般都是一些需要和网页一起加载的图片才会使用base64")]),t._v(" "),a("p",[t._v("**原则: **效果一样,用小的")]),t._v(" "),a("p",[t._v("​\t\t效果不一样,用效果好的,同样考虑下图片大小")])]),t._v(" "),a("h3",{attrs:{id:"video-视频标签"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#video-视频标签"}},[t._v("#")]),t._v(" video    视频标签")]),t._v(" "),a("blockquote",[a("p",[t._v("src=“视频地址”: 表示我们需要显示的视频文件所在的位置")]),t._v(" "),a("p",[a("strong",[t._v("支持格式")])]),t._v(" "),a("blockquote",[a("p",[t._v("MP4  WebM  Ogg")])]),t._v(" "),a("p",[a("strong",[t._v("属性:")])]),t._v(" "),a("p",[t._v("​\t\tcontrols  是否允许用户控制播放暂停")]),t._v(" "),a("p",[t._v("​\t\tautoplay 自动播放  打开页面时候自动播放,目前大部分游览器都不会对音乐自动播放")]),t._v(" "),a("p",[t._v("​\t\tloop  循环播放")])]),t._v(" "),a("h3",{attrs:{id:"audio标签-音频标签"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#audio标签-音频标签"}},[t._v("#")]),t._v(" audio标签  音频标签")]),t._v(" "),a("blockquote",[a("p",[t._v("src=“视频地址”: 表示我们需要显示的视频文件所在的位置")]),t._v(" "),a("p",[t._v("默认情况下不允许用户自己控制播放停止")]),t._v(" "),a("p",[a("strong",[t._v("属性:")])]),t._v(" "),a("p",[t._v("​\t\tcontrols  是否允许用户控制播放暂停")]),t._v(" "),a("p",[t._v("​\t\tautoplay 自动播放  打开页面时候自动播放,目前大部分游览器都不会对音乐自动播放")]),t._v(" "),a("p",[t._v("​\t\tloop  循环播放")])]),t._v(" "),a("p",[a("strong",[t._v("支持格式:")])]),t._v(" "),a("blockquote",[a("p",[t._v("wav、mp3、ogg")])]),t._v(" "),a("h3",{attrs:{id:"pre标签"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pre标签"}},[t._v("#")]),t._v(" pre标签")]),t._v(" "),a("blockquote",[a("p",[t._v("完全按照你的书写格式还原")])]),t._v(" "),a("h3",{attrs:{id:"其他标签"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他标签"}},[t._v("#")]),t._v(" 其他标签")]),t._v(" "),a("p",[a("code",[t._v("s")]),t._v(" "),a("code",[t._v("del")]),t._v("删除线")]),t._v(" "),a("p",[a("code",[t._v("u ins")]),t._v(" 下划线")]),t._v(" "),a("p",[a("code",[t._v("big")]),t._v("文字变大115%    "),a("code",[t._v("small")]),t._v("文字变小85%")]),t._v(" "),a("p",[t._v("hr 水平分割线  br换行")]),t._v(" "),a("p",[a("code",[t._v("sub")]),t._v("规定下标 "),a("code",[t._v("sup")]),t._v("规定上标")]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[t._v("<p>  2h+o=h<sub>2</sub>o  </p>\n<p>  3<sup>2</sup>+4<sup>2</sup>=5<sup>2</sup>   </p>\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("h2",{attrs:{id:"特殊的字符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#特殊的字符"}},[t._v("#")]),t._v(" 特殊的字符")]),t._v(" "),a("p",[t._v("因为网页编写的多个空格默认情况下会自动被游览器解析为一个空格")]),t._v(" "),a("p",[t._v("在html有些时候我们不能直接书写一些特殊符号.")]),t._v(" "),a("blockquote",[a("p",[t._v("比如:多个连续的空格,字母两侧的大于号和小于号")])]),t._v(" "),a("p",[t._v("如果我们需要在网页中书写这些特殊的符号,则需要使用html中的实体(转义字符);")]),t._v(" "),a("p",[t._v("实体的语法:")]),t._v(" "),a("blockquote",[a("p",[t._v("&实体的名字")])]),t._v(" "),a("ul",[a("li",[t._v("空格; "),a("code",[t._v("&nbsp;")])]),t._v(" "),a("li",[t._v("小于号: "),a("code",[t._v("&lt;")]),t._v("    less than")]),t._v(" "),a("li",[t._v("大于号: "),a("code",[t._v("&gt;")]),t._v("    greater than")]),t._v(" "),a("li",[t._v("版权符号 "),a("code",[t._v("&copy;")])])]),t._v(" "),a("h2",{attrs:{id:"常用块级和行内元素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用块级和行内元素"}},[t._v("#")]),t._v(" 常用块级和行内元素")]),t._v(" "),a("p",[a("strong",[t._v("块元素(block element)")])]),t._v(" "),a("blockquote",[a("p",[t._v("div h ol ul li dl dt dd p blockquote pre")])]),t._v(" "),a("p",[a("strong",[t._v("行内元素 (inline elemnet)")])]),t._v(" "),a("blockquote",[a("p",[t._v("a  b   strong  em  i  span    video  audio   img")])]),t._v(" "),a("p",[t._v("块级元素独占一行,在网页中一般使用块元素进行页面的布局")]),t._v(" "),a("p",[t._v("行内元素并列一行,主要用来包裹文字")]),t._v(" "),a("p",[t._v("一般情况下我们在块级元素可以包裹任何类型的标签,行内元素只能包裹行内元素.")]),t._v(" "),a("p",[a("strong",[t._v("特殊:")])]),t._v(" "),a("blockquote",[a("p",[t._v("p元素不能放任何的块级元素.")]),t._v(" "),a("p",[t._v("a标签可以放块级元素")])]),t._v(" "),a("h3",{attrs:{id:"html标签语义化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#html标签语义化"}},[t._v("#")]),t._v(" HTML标签语义化")]),t._v(" "),a("blockquote",[a("p",[t._v("HTML标签语义化就是用正确的标签做正确的事情,让标签有自己的含义。")]),t._v(" "),a("p",[t._v("作用:")]),t._v(" "),a("p",[t._v("​\t\t让⻚⾯的内容结构化，便于对浏览器、搜索引擎解析；")])]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[t._v("<p>一行文字</p>\n<span>一行文字</span>\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*此时都是写了一行文字,而p标签的含义为段落,span标签则没有独特的含义.*/")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("h3",{attrs:{id:"代码规范-tab来缩进代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代码规范-tab来缩进代码"}},[t._v("#")]),t._v(" 代码规范:tab来缩进代码")]),t._v(" "),a("blockquote",[a("p",[t._v("正确嵌套,元素嵌套就是一颗种族树,最上面是曾祖父,下面是所有的孩子和孙子.")]),t._v(" "),a("p",[t._v("子层级代码相对父层级代码缩进一个tab.")]),t._v(" "),a("p",[t._v("开始标签和结束标签发生换行请保证在竖直位置对齐.")]),t._v(" "),a("p",[t._v("注意:我们一定要严格要求我们书写规范.")]),t._v(" "),a("p",[t._v("在企业面试时面试官第一眼看的是代码格式.这是工程师的第一要求,也是工程师的自我修养.")])])])}),[],!1,null,null,null);s.default=e.exports}}]);